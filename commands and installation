================== UBUNTU ================
-ATOM
- Udemy
- Pomodoro
- Chrome
- dropbox
- Spotify
- Visual Studio
- Pycharm
- Eclipse




=================== ATOM ===============
Plugins:users/
highlight selected
pigment
atom-python-run
autocomplete-python
magicpython 1.1.1 (magicstack)
file-icons
intetions
platformio-ide-terminal   OU  terminus 4.0.5
pretty-json
linter-pylama


====================== GIT ==============

git config --global user.name "Weverton Castro"
git config --global user.email "wvcastro42@gmail.com
git config --global core.editor atom
git config --list ou git config oquedesejaver

GERAR, COPIAR E ADD SSH KEY NO GITHUB

criar/ir na pasta onde usará o git e digitar: git init
git status :> mostra o status do git

após criar arquivo:
git add Arquivo.extensão (staged)

Quando alterar tem que dar um : git add no arquivo novamente

git commit -m "Add arquivo.txt"  (parâmetro a: arquivos modificados ex.: git commit -am "mesangem de texto"


git log / git log --decorate  / git log --author="Weverton" / git shortlog -sn / git log --graph : mostra infromações dos commits

git show 445b76b20f2b921fda857a0cf29be127d03e6afb : mostra o que foi feito no commit

git diff / git diff --name-only  -> boa prática antes dos commits para ver a diferença entre antes e depois


DESFAZER:

git checkout arquivo.txt :> desfaz a ultima alteração (modified/unstage - antes de add staged)

git reset HEAD arquivo.txt :> volta o arquivo para modified/unstage

git reset --soft --mixed --hard +HASHDOCOMMITANTERIOR AO QUE DESEJA RESETAR


ENVIAR PARA GITHUB:

git remote add origin git@github.com:wvcastro42/teste.git     +
git push -u origin master || git push -uf fullstack master (-f = force)

git remote remove origin



===================== ANACONDA 3 ======================


export PATH=~/anaconda3/bin:$PATH (RESOLVER PROBLEMA: conda: command not found)
conda info --envs (discovery all virtuals environment)
source activate /home/weverton/anaconda3/envs/myDjangoEnv/ (ativar o ambiente)


======================= DJANGO ===========================


1º CRIAR VENV
2º ATIVAR venv
3º INSTALAR DJANGO==3.0.8
4º VERIFICAR VERSÃO DJANGO / SE INSTALOU CORRETAMENTE
5º DJANGO-ADMIN startproject nome_projeto
6º

sudo apt install python3.8-venv




source activate (na pasta do virtualenv) // deactivate

***** virtualenv venv -p python3

> conda install django or
> pip3 install django==3.0.8

VErsão do DJANGO
> django-admin.py --version

django-admin startproject nome_projeto
python manage.py startapp nome_app
SUDO python manage.py runserver

se try to instausers/
source activate /home/weverton/anaconda3/envs/myDjangoEnv/ (ativar o ambiente)


################ URLS.PY - in project folder  ##################

from django.contrib import admin
from django.urls import path
from first_app import views  #importe from views - in views.py (application folder)

urlpatterns = [
    path('', views.index),
    path('aew_carai', views.aew_carai, name="birrrrrl"),  'aew_carai' (url for access) / views.aew_carai (catching method from views.py)
    path('admin/', admin.site.urls),
]

############    MODEL OF VIEWS.PY ###############

from django.http import HttpResponse
# Create your views here.

def index(request):
    return HttpResponse("Hello World!")

    def aew_carai(request):                       / always must pass a request parameter
    return HttpResponse("Deu certo, porra!")  / always must returns a HttpResponse

############# SETTINGS ############

Remember to add the app in INSTALLED_APPS


python3 manage.py migrate
python3 manage.py makemigrations nome_do_app

python3 manage.py createsuperuser

Username (leave blank to use 'weverton'):
Email address: wvcastro42@gmail.com
Password: 1234


############  WORKFLOW DJANGO  ###############
- Start project
- Start App
- Pasta templates
- pasta templates/my_ap
- add templares_dir no settings.py e no dicionário + add app
- criar os templates/htmls index, users, help.html etc
- criar classe no models
- views (import models e criar def's para cada view)
- urls na pasta do projeto e na do app
- make migrate -> make makemigrations -> make migrate novamente
- importar e registrar models no admin.py
- testar: runserver e ver se acessa o localhost
- trabalhar nos templates(html)
- criar super user: python manage.py createsuperuser
- testar superuser
- popular banco - criando script
- verificar no admin se usuários/populate routine works
- ir no template(users.html) e iterar lista usando a template tag(criada na views.py)
-



################## PYENV #########################
Setar python localmente:

$ cd project1/
$ pyenv which python
/usr/bin/python
$ pyenv virtualenv 3.6.8 project1
...
$ pyenv local project1
$ python -V
/home/realpython/.pyenv/versions/project1/bin/python

startar venv:
pyenv which python  - achar o caminho
  ex: /home/wvcastro42/.pyenv/versions/myvenv/bin/python
source /home/wvcastro42/.pyenv/versions/myvenv/bin/activate











.
